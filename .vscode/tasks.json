{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "type": "cppbuild", //任务类型: process, shell
            "command": "D:\\mingw64\\bin\\gcc.exe", //编译命令: c++换成g++
            "args": [
                "-fdiagnostics-color=always",
                "-g", //生成和调试有关的信息
                "${file}", //c++更换为*.cpp
                "-o",
                "${fileDirname}\\bin\\${fileBasenameNoExtension}.exe",
                "-Wall", // 开启额外警告
                "-static-libgcc", // 静态链接libgcc
                "-fexec-charset=UTF-8", // 生成文件编码
                "-std=c17", // 语言标准, c++更改为c++标准
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc" //捕捉编译时编译器在终端里显示的报错信息, 将其显示在vscode的'问题'面板里
            ],
            "group": { //group表示'组', 我们可以有很多的task, 然后把他们放在一个'组'里
                "kind": "build", //表示这一组任务类型是构建
                "isDefault": true //表示这个任务是当前这组任务中的默认任务
            },
            "presentation": { //执行这个任务时的一些其他设定
                "echo": true, //表示在执行任务时在终端要有输出
                "reveal": "always", //执行任务时是否跳转到终端面板, 可以为always, silent, never
                "focus": false, //设为true后可以使执行task时焦点聚集在终端, 但对编译来说, 设为true没有意义, 因为运行的时候才涉及到输入
                "panel": "new" //每次执行这个task时都新建一个终端面板, 也可以设置为shared, 共用一个面板, 不过那样会出现'任务将被终端重用'的提示, 比较烦人
            },
        },
        {
            "label": "run",
            "type": "shell",
            "dependsOn": "build", //任务依赖, 因为要运行必须先构建, 所以执行这个任务前必须先执行build任务, 
            "command": "${fileDirname}\\bin\\${fileBasenameNoExtension}.exe", //执行exe文件, 只需要指定这个exe文件在哪里就好
            "group": {
                "kind": "test", //这一组是'测试'组, 将run任务放在test组里方便我们用快捷键执行
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true, //这个就设置为true了, 运行任务后将焦点聚集到终端, 方便进行输入
                "panel": "new"
            }
        }
    ]
}